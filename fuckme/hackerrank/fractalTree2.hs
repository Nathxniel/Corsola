-- Hackerrank: Fractal Tree

main :: IO ()
main
  = do
      x <- readLn :: IO Int
      mapIO putStrLn $ drawFractal x

mapIO :: (a -> IO ()) -> [a] -> IO ()
mapIO _ []
  = return ()
mapIO f (x:xs)
  = do
      f x
      mapIO f xs

type Tree
  = [String]

drawFractal :: Int -> Tree
drawFractal x
  = drawFractal' x startTree startTree
  where
    drawFractal' 1 thisTree _
      = heightPad thisTree
    drawFractal' n thisTree lastTree
      = drawFractal' (n-1) (calcFractal lastTree ++ thisTree) (calcFractal lastTree)

heightPad :: Tree -> Tree
heightPad xs
  | length xs >= 63 = xs
  | otherwise       = heightPad $ ((take 100 . repeat) '_') : xs
  
--widthPad :: String -> String
--widthPad xs
--  | length xs == 100 = xs
--  | otherwise        = widthPad ('_' : xs ++ "_")

calcFractal :: Tree -> Tree
calcFractal ts
  =  foldr (\x acc -> (reduce $ take (length x * 2) (cycle x)) : acc) [] ts
  where
    reduce xs
      = reduce' xs []
      where
        reduce' [] acc
          = reverse acc
        reduce' (x:y:xs) acc
          = reduce' xs (y:acc)

halfTree :: Tree -> Tree
halfTree ts
  = halfTree' ts []
  where
    halfTree' [] acc
      = reverse acc
    halfTree' [x] acc
      = reverse acc
    halfTree' (x:_:xs) acc
      = halfTree' xs (x:acc)

startTree :: Tree
startTree
  = ["_________________________________1                               1__________________________________",
     "__________________________________1                             1___________________________________",
     "___________________________________1                           1____________________________________",
     "____________________________________1                         1_____________________________________",
     "_____________________________________1                       1______________________________________",
     "______________________________________1                     1_______________________________________",
     "_______________________________________1                   1________________________________________",
     "________________________________________1                 1_________________________________________",
     "_________________________________________1               1__________________________________________",
     "__________________________________________1             1___________________________________________",
     "___________________________________________1           1____________________________________________",
     "____________________________________________1         1_____________________________________________",
     "_____________________________________________1       1______________________________________________",
     "______________________________________________1     1_______________________________________________",
     "_______________________________________________1   1________________________________________________",
     "________________________________________________1 1_________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________",
     "_________________________________________________1__________________________________________________"]
